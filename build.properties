# Specify database vendor. This should correspond to some
# sub-directory under the ./sql directory in the source
# distribution. It should also match the 'engine' attribute
# in castor's database.xml file.
db.vendor=mysql

# See castor's mapping.xml file. This varies according to the
# vendor-specific engine in use.
db.keygenerator=IDENTITY

# Specify the driver/URL combination used to access the database
# engine; the URL specified here is used for creating and deleting
# our application-specific database.
db.driver=org.gjt.mm.mysql.Driver
db.url=jdbc:mysql://bushenyi/mysql

# Specify vendor-specific JDBC-driver used for pooling connections.
db.jdbc.driver=com.mysql.jdbc.Driver

# Specify the name of the database that Ajaqs will use.
# NOTE: the name appears twice here:
#  1. to define the name of the db
#  2. to identify the URL used to access the db.
db.ajaqs.name=ajaqs
db.ajaqs.url=jdbc:mysql://bushenyi/ajaqs

# Specify a logon/password combination for the DB administrator.
# These will be used to create the database necessary for
# operation of the Ajaqs program.
db.admin.logon=root
db.admin.password=connected

# Specify a logon/password combination for a database user.
# These are used to manage the backend during operation of
# the Ajaqs program.
db.user.logon=cread
db.user.password=cread123

# Name of client (ie, host) from which above db user will login.
# If you are using a UNIX machine, the 'hostname' command will
# return a string suitable for this property.
db.user.host=bushenyi

# Ant location.
ant.home=/usr/local/apache-ant-1.6.2
tomcat.home=/usr/local/jakarta-tomcat-5.5.4

# Log file for Ajaqs.
ajaqs.log.file=/usr/local/jakarta-tomcat-5.5.4/logs/ajaqs.log

# Log file for Castor; used when mapping Java objects to back-end.
sql.log.file=/usr/local/jakarta-tomcat-5.5.4/logs/castor.log

# Directory containing castor .jar files, which should include:
# - castor-0.9.9.jar
# - jta1.0.1.jar
castor.dir=/usr/local/castor

# Directory containing JSTL .jar files, which should include:
# - jstl.jar
# - standard.jar
jstl.dir=/usr/local/jakarta-taglibs-standard-1.1.2/lib

# Directory containing .jar file for request tags:
# - taglibs-request.jar
taglibs.request.dir=/usr/local/jakarta-taglibs-request-1.0.1

# .jar file containing servlets API.
servlet.jar=/usr/local/jakarta-tomcat-5.5.4/common/lib/servlet-api.jar
jsp.jar=/usr/local/jakarta-tomcat-5.5.4/common/lib/jsp-api.jar

# .jar file containing log4j.
log4j.dir=/usr/local/jakarta-log4j-1.2.8/dist/lib
log4j.jar=/usr/local/jakarta-log4j-1.2.8/dist/lib/log4j-1.2.8.jar

# .jar file containing MultipartRequest stuff from oreilly.com.
multipart.dir=/usr/local/oreilly/lib
multipart.jar=/usr/local/oreilly/lib/cos.jar

# .jar files used for test target.
xerces.jar=/usr/local/jakarta-tomcat-5.5.4/common/lib/xercesImpl.jar
commons.logging.jar=/usr/local/jakarta-tomcat-5.5.4/common/lib/commons-logging.jar

# These properties are used for deployment under Tomcat.
manager.url=http://bushenyi:8080/manager
manager.username=tomcat
manager.password=tomcat
webapp.src=file:///home/cread/ajaqs/build/ajaqs.war
webapp.path=/ajaqs
webapp.docbase=/usr/local/jakarta-tomcat-5.5.4/webapps/ajaqs.war
webapp.unpacked=file:///home/cread/ajaqs/ajaqs
